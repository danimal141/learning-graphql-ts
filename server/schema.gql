# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  token: String!
  user: User!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Mutation {
  addFakeUsers(count: Float!): [User!]!
  createPhoto(photo: PostPhotoInput!): Photo!
  githubAuth(code: String!): AuthPayload!
}

type Photo {
  category: PhotoCategory!
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  postedBy: User!
  taggedUsers: [User!]!
  url: String!
}

enum PhotoCategory {
  Action
  Graphic
  Landscape
  Portrait
  Selfie
}

input PostPhotoInput {
  category: String = "PORTRAIT"
  description: String
  name: String!
}

type Query {
  allPhotos: [Photo!]!
  allUsers: [User!]!
  me: User
  totalPhotos: Int!
  totalUsers: Int!
}

type User {
  avatar: String!
  createdAt: DateTime!
  githubLogin: ID!
  inPhotos: [Photo!]!
  name: String!
  postedPhotos: [Photo!]!
}
